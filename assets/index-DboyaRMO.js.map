{"version":3,"file":"index-DboyaRMO.js","sources":["../../src/components/LanguageSwitcher.tsx","../../src/components/StyledMarkdown.tsx","../../src/views/ContentView.tsx","../../src/views/HomeView.tsx","../../src/App/theme.ts","../../src/App/App.tsx","../../src/i18n/translations/en.ts","../../src/i18n/translations/th.ts","../../src/i18n/config.ts","../../src/main.tsx"],"sourcesContent":["import { Stack, Typography } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const LanguageSwitcher: FC = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  return (\r\n    <Stack\r\n      spacing={1}\r\n      useFlexGap\r\n      direction=\"row\"\r\n      flexWrap=\"wrap\"\r\n      divider={<Typography>/</Typography>}\r\n    >\r\n      <Typography\r\n        variant=\"caption\"\r\n        sx={{\r\n          cursor: \"pointer\",\r\n          textDecorationLine: \"underline\",\r\n        }}\r\n        onClick={() => i18n.changeLanguage(\"en\")}\r\n      >\r\n        EN\r\n      </Typography>\r\n      <Typography\r\n        variant=\"caption\"\r\n        sx={{\r\n          cursor: \"pointer\",\r\n          textDecorationLine: \"underline\",\r\n        }}\r\n        onClick={() => i18n.changeLanguage(\"th\")}\r\n      >\r\n        TH\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport Markdown from \"react-markdown\";\r\n\r\ntype StyledMarkdownProps = {\r\n  children: string;\r\n};\r\nexport const StyledMarkdown: FC<StyledMarkdownProps> = (\r\n  props\r\n) => {\r\n  const { children } = props;\r\n  return <Markdown>{children}</Markdown>;\r\n};\r\n","import { KeyRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  Fab,\r\n  TextField,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box, Container, Stack } from \"@mui/system\";\r\nimport { FC, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { LanguageSwitcher } from \"../components/LanguageSwitcher\";\r\nimport { StyledMarkdown } from \"../components/StyledMarkdown\";\r\nimport { LoaderData } from \"../types/loader\";\r\n\r\nexport const ContentView: FC = () => {\r\n  const { content } = useLoaderData() as LoaderData;\r\n  const { t } = useTranslation();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Toolbar>\r\n        <LanguageSwitcher />\r\n      </Toolbar>\r\n      <Box padding={4}>\r\n        <StyledMarkdown>{content}</StyledMarkdown>\r\n      </Box>\r\n      <Dialog\r\n        onClose={() => setDialogOpen(false)}\r\n        open={dialogOpen}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        slotProps={{\r\n          backdrop: {\r\n            sx: {\r\n              backdropFilter: \"blur(5px)\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <DialogContent>\r\n          <Stack spacing={1}>\r\n            <TextField\r\n              slotProps={{\r\n                htmlInput: {\r\n                  sx: {\r\n                    fontFamily: \"Ubuntu Mono\",\r\n                  },\r\n                  autoCapitalize: \"off\",\r\n                  autoComplete: \"off\",\r\n                },\r\n              }}\r\n              fullWidth\r\n              placeholder=\"Passcode\"\r\n            />\r\n            <Box>\r\n              <Button\r\n                disableElevation\r\n                disableRipple\r\n                variant=\"contained\"\r\n              >\r\n                {t(\"unlock\")}\r\n              </Button>\r\n            </Box>\r\n          </Stack>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Fab\r\n        color=\"primary\"\r\n        disableRipple\r\n        sx={{\r\n          position: \"absolute\",\r\n          bottom: 32,\r\n          right: 32,\r\n        }}\r\n        onClick={() => setDialogOpen(!dialogOpen)}\r\n      >\r\n        <Tooltip\r\n          placement=\"left\"\r\n          title={<Typography>{t(\"unscramble\")}</Typography>}\r\n        >\r\n          <KeyRounded />\r\n        </Tooltip>\r\n      </Fab>\r\n    </Container>\r\n  );\r\n};\r\n","import {\r\n  alpha,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  GlobalStyles,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  amber,\r\n  deepOrange,\r\n  orange,\r\n  yellow,\r\n} from \"@mui/material/colors\";\r\nimport { FC, Fragment, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form } from \"react-router\";\r\nimport { LanguageSwitcher } from \"../components/LanguageSwitcher\";\r\n\r\nexport const HomeView: FC = () => {\r\n  const { t } = useTranslation();\r\n  const { shape } = useTheme();\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const disabled = id.normalize().trim().length === 0;\r\n  return (\r\n    <Fragment>\r\n      <GlobalStyles\r\n        styles={{\r\n          body: {\r\n            background: `linear-gradient(to bottom right, ${yellow[\"50\"]}, ${amber[\"100\"]}, ${orange[\"100\"]}, ${deepOrange[\"200\"]})`,\r\n          },\r\n        }}\r\n      />\r\n      <Container maxWidth=\"md\">\r\n        <Form\r\n          action=\"/card\"\r\n          method=\"get\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Box\r\n            width=\"100%\"\r\n            sx={{\r\n              borderRadius: shape.borderRadius,\r\n              backgroundColor: alpha(\"#fff\", 0.4),\r\n            }}\r\n          >\r\n            <Stack\r\n              useFlexGap\r\n              padding={8}\r\n              spacing={2}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                component=\"h1\"\r\n                fontFamily=\"noto serif thai\"\r\n              >\r\n                {t(\"newYearCard\")}\r\n              </Typography>\r\n              <TextField\r\n                placeholder={t(\"cardId\")}\r\n                name=\"id\"\r\n                value={id}\r\n                onChange={(e) => setId(e.target.value)}\r\n                fullWidth\r\n                slotProps={{\r\n                  input: {\r\n                    sx: {\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: shape.borderRadius,\r\n                    },\r\n                  },\r\n                  htmlInput: {\r\n                    autoCapitalize: \"off\",\r\n                    autoComplete: \"off\",\r\n                    autoSave: \"off\",\r\n                    sx: {\r\n                      fontFamily: \"Ubuntu Mono\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              <Stack\r\n                width=\"100%\"\r\n                useFlexGap\r\n                spacing={2}\r\n                direction=\"row\"\r\n                flexWrap=\"wrap\"\r\n                alignItems=\"flex-end\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Button\r\n                  disableRipple\r\n                  disableElevation\r\n                  disabled={disabled}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  size=\"large\"\r\n                >\r\n                  {t(\"open\")}\r\n                </Button>\r\n                <LanguageSwitcher />\r\n              </Stack>\r\n            </Stack>\r\n          </Box>\r\n        </Form>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nconst _theme = createTheme({\r\n  typography: { fontSize: 16 },\r\n  palette: {\r\n    primary: {\r\n      dark: \"#3f2f9d\",\r\n      main: \"#6a5acd\",\r\n      light: \"#9c92dd\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const theme = _theme;\r\n","import { CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  createBrowserRouter,\r\n  redirect,\r\n  RouterProvider,\r\n} from \"react-router\";\r\nimport { LoaderData } from \"../types/loader\";\r\nimport { ContentView } from \"../views/ContentView\";\r\nimport { HomeView } from \"../views/HomeView\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst baseURL = import.meta.env.BASE_URL;\r\n\r\nconst router = createBrowserRouter(\r\n  [\r\n    {\r\n      index: true,\r\n      element: <HomeView />,\r\n    },\r\n    {\r\n      path: \"/card\",\r\n      loader: ({ request }) => {\r\n        const url = new URL(request.url);\r\n        const queryParam = url.searchParams;\r\n        if (queryParam.has(\"id\")) {\r\n          return redirect(`/card/${queryParam.get(\"id\")!}`);\r\n        }\r\n        return redirect(\"/\");\r\n      },\r\n    },\r\n    {\r\n      path: \"/card/:id\",\r\n      element: <ContentView />,\r\n      loader: async ({ params }) => {\r\n        const { id } = params;\r\n        if (id === undefined) {\r\n          return redirect(\"/\");\r\n        }\r\n        const request = await fetch(\r\n          `${baseURL}assets/content/${id}.enc`\r\n        );\r\n        if (!request.ok) {\r\n          return redirect(\"/\");\r\n        }\r\n        const content = await request.text();\r\n        const loaderData: LoaderData = {\r\n          content,\r\n        };\r\n        return loaderData;\r\n      },\r\n    },\r\n  ],\r\n  {\r\n    basename: \"/project-new-year-card-2025/\",\r\n  }\r\n);\r\n\r\nexport const App: FC = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <RouterProvider router={router} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","export default {\r\n  translation: {\r\n    cardId: \"Card ID\",\r\n    open: \"Open\",\r\n    passcode: \"Pass code\",\r\n    newYearCard: \"New Year Greetings 2025\",\r\n    unlock: \"Unlock\",\r\n    unscramble: \"Unscramble\",\r\n  },\r\n};\r\n","export default {\r\n  translation: {\r\n    cardId: \"หมายเลขส.ค.ส.\",\r\n    open: \"เปิด\",\r\n    newYearCard: \"ส่งความสุข พุทธศักราช ๒๕๖๘\",\r\n  },\r\n};\r\n","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend from \"i18next-http-backend\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./translations/en\";\r\nimport th from \"./translations/th\";\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    detection: {\r\n      lookupLocalStorage: \"language\",\r\n    },\r\n    debug: true,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    resources: {\r\n      en,\r\n      th,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { App } from \"./App/App\";\nimport \"./i18n/config\";\nimport \"./main.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\n"],"names":["LanguageSwitcher","i18n","useTranslation","jsxs","Stack","jsx","Typography","StyledMarkdown","props","children","Markdown","ContentView","content","useLoaderData","t","dialogOpen","setDialogOpen","useState","Container","Toolbar","Box","Dialog","DialogContent","TextField","Button","Fab","Tooltip","KeyRounded","HomeView","shape","useTheme","id","setId","disabled","Fragment","GlobalStyles","yellow","amber","orange","deepOrange","Form","alpha","e","_theme","createTheme","theme","baseURL","router","createBrowserRouter","request","queryParam","redirect","params","App","ThemeProvider","CssBaseline","RouterProvider","en","th","Backend","LanguageDetector","initReactI18next","createRoot","StrictMode"],"mappings":"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"}