{"version":3,"file":"index-C8bz2-r8.js","sources":["../../src/components/StyledMarkdown.tsx","../../src/core/crypto.ts","../../../../../../../assets/images/hero2.jpg","../../src/views/ContentView.tsx","../../src/components/LanguageSwitcher.tsx","../../src/views/HomeView.tsx","../../src/App/theme.ts","../../src/App/App.tsx","../../src/i18n/translations/en.ts","../../src/i18n/translations/th.ts","../../src/i18n/config.ts","../../src/main.tsx"],"sourcesContent":["import { Box, styled } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Markdown, { Components } from \"react-markdown\";\r\n\r\nconst StyledP = styled(\"p\")({\r\n  textIndent: 24,\r\n});\r\n\r\nconst COMPONENT_OVERRIDE: Partial<Components> = {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  p: ({ node, children, ...rest }) => {\r\n    return <StyledP {...rest}>{children}</StyledP>;\r\n  },\r\n};\r\n\r\ntype StyledMarkdownProps = {\r\n  children: string;\r\n};\r\nexport const StyledMarkdown: FC<StyledMarkdownProps> = (\r\n  props\r\n) => {\r\n  const { children } = props;\r\n  const { i18n } = useTranslation();\r\n\r\n  const fontFamily =\r\n    i18n.language === \"en\"\r\n      ? \"ibm plex serif\"\r\n      : \"noto serif thai\";\r\n\r\n  return (\r\n    <Box\r\n      overflow=\"auto\"\r\n      sx={{\r\n        fontFamily,\r\n        wordWrap: \"break-word\",\r\n        whiteSpace: \"wrap\",\r\n      }}\r\n    >\r\n      <Markdown components={COMPONENT_OVERRIDE}>\r\n        {children}\r\n      </Markdown>\r\n    </Box>\r\n  );\r\n};\r\n","const hexToUint8Array = (hexIv: string) => {\r\n  const length = hexIv.length;\r\n  const uint8Array = new Uint8Array(length / 2);\r\n  for (let i = 0; i < length; i += 2) {\r\n    uint8Array[i / 2] = parseInt(hexIv.substr(i, 2), 16); // Parse every two hex characters\r\n  }\r\n  return uint8Array;\r\n};\r\n\r\nexport const encryptDocument = async (\r\n  plainText: string,\r\n  passphrase: string\r\n) => {\r\n  const keyMaterial = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    new TextEncoder().encode(passphrase),\r\n    \"PBKDF2\",\r\n    false,\r\n    [\"deriveKey\"]\r\n  );\r\n\r\n  const key = await crypto.subtle.deriveKey(\r\n    {\r\n      name: \"PBKDF2\",\r\n      salt: new TextEncoder().encode(\"unique-salt\"),\r\n      iterations: 100000,\r\n      hash: \"SHA-256\",\r\n    },\r\n    keyMaterial,\r\n    { name: \"AES-GCM\", length: 256 },\r\n    false,\r\n    [\"encrypt\", \"decrypt\"]\r\n  );\r\n  const iv = crypto.getRandomValues(new Uint8Array(12));\r\n  const encryptedData = await crypto.subtle.encrypt(\r\n    { name: \"AES-GCM\", iv },\r\n    key,\r\n    new TextEncoder().encode(plainText)\r\n  );\r\n  return {\r\n    encryptedDocument: btoa(\r\n      String.fromCharCode(...new Uint8Array(encryptedData))\r\n    ),\r\n    iv: btoa(String.fromCharCode(...iv)),\r\n  };\r\n};\r\n\r\nexport const decryptDocument = async (\r\n  encryptedDocument: string,\r\n  iv: string,\r\n  passphrase: string\r\n) => {\r\n  const keyMaterial = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    new TextEncoder().encode(passphrase),\r\n    \"PBKDF2\",\r\n    false,\r\n    [\"deriveKey\"]\r\n  );\r\n  const key = await crypto.subtle.deriveKey(\r\n    {\r\n      name: \"PBKDF2\",\r\n      salt: new TextEncoder().encode(\"unique-salt\"),\r\n      iterations: 100000,\r\n      hash: \"SHA-256\",\r\n    },\r\n    keyMaterial,\r\n    { name: \"AES-GCM\", length: 256 },\r\n    false,\r\n    [\"encrypt\", \"decrypt\"]\r\n  );\r\n  const encryptedBytes = Uint8Array.from(\r\n    atob(encryptedDocument),\r\n    (c) => c.charCodeAt(0)\r\n  );\r\n  const ivBytes = hexToUint8Array(iv);\r\n  const decryptedData = await crypto.subtle.decrypt(\r\n    { name: \"AES-GCM\", iv: ivBytes },\r\n    key,\r\n    encryptedBytes\r\n  );\r\n  return new TextDecoder().decode(decryptedData);\r\n};\r\n","export default \"__VITE_PUBLIC_ASSET__f2e6e9eb__\"","import {\r\n  KeyRounded,\r\n  LocalFloristRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  Divider,\r\n  Fab,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { brown, yellow } from \"@mui/material/colors\";\r\nimport { alpha, Box, Stack } from \"@mui/system\";\r\nimport { FC, Fragment, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { StyledMarkdown } from \"../components/StyledMarkdown\";\r\nimport { decryptDocument } from \"../core/crypto\";\r\nimport { LoaderData } from \"../types/loader\";\r\nimport hero from \"/assets/images/hero2.jpg\";\r\n\r\nconst UNLOCKED_DATE = new Date(2025, 0, 1);\r\n\r\nexport const ContentView: FC = () => {\r\n  const { content: encrypted, id } =\r\n    useLoaderData() as LoaderData;\r\n  const { t, i18n } = useTranslation();\r\n  const { palette } = useTheme();\r\n  const [isDecrypted, setIsDecrypted] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [content, setContent] = useState(encrypted);\r\n  const [passphrase, setPassphrase] = useState(\"\");\r\n\r\n  const handleDialogOpen = () => {\r\n    if (isDecrypted) {\r\n      return;\r\n    }\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleDecrypt = async () =>\r\n    decryptDocument(encrypted, id, passphrase)\r\n      .then((ok) => {\r\n        setContent(ok);\r\n        setIsDecrypted(true);\r\n      })\r\n      .finally(() => {\r\n        setPassphrase(\"\");\r\n        setDialogOpen(false);\r\n      });\r\n\r\n  const now = Date.now() / 1000;\r\n  const target = UNLOCKED_DATE.getTime() / 1000;\r\n  const delta = target - now;\r\n\r\n  const fontFamily =\r\n    i18n.language === \"en\"\r\n      ? \"ibm plex serif\"\r\n      : \"noto serif thai\";\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        width=\"100%\"\r\n        sx={{\r\n          backgroundColor: alpha(yellow[\"100\"], 0.2),\r\n        }}\r\n      >\r\n        <Box\r\n          component=\"img\"\r\n          width=\"100%\"\r\n          loading=\"eager\"\r\n          src={hero}\r\n          sx={{\r\n            border: \"none\",\r\n            objectFit: \"cover\",\r\n            objectPosition: \"0% 40%\",\r\n            height: \"45vh\",\r\n          }}\r\n        />\r\n        <Box\r\n          padding={4}\r\n          sx={{\r\n            color: brown[\"700\"],\r\n            margin: \"auto\",\r\n            maxWidth: \"md\",\r\n          }}\r\n        >\r\n          <StyledMarkdown>{content}</StyledMarkdown>\r\n          <Divider\r\n            flexItem\r\n            variant=\"middle\"\r\n          >\r\n            <LocalFloristRounded color=\"primary\" />\r\n          </Divider>\r\n        </Box>\r\n      </Box>\r\n      <Dialog\r\n        fullWidth\r\n        disableRestoreFocus\r\n        open={dialogOpen}\r\n        onClose={() => setDialogOpen(false)}\r\n        maxWidth=\"md\"\r\n        slotProps={{\r\n          backdrop: {\r\n            sx: {\r\n              backdropFilter: \"blur(5px)\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <DialogContent>\r\n          <Stack spacing={1}>\r\n            <TextField\r\n              autoFocus\r\n              value={passphrase}\r\n              fullWidth\r\n              placeholder={t(\"passcode\")}\r\n              onChange={(e) =>\r\n                setPassphrase(e.target.value)\r\n              }\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleDecrypt();\r\n                }\r\n              }}\r\n              slotProps={{\r\n                htmlInput: {\r\n                  sx: {\r\n                    fontFamily: \"Ubuntu Mono\",\r\n                  },\r\n                  autoCapitalize: \"off\",\r\n                  autoComplete: \"off\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              useFlexGap\r\n              flexWrap=\"wrap\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-start\"\r\n            >\r\n              <Button\r\n                disableElevation\r\n                disableRipple\r\n                variant=\"contained\"\r\n                onClick={handleDecrypt}\r\n                disabled={delta > 0}\r\n                sx={{\r\n                  maxWidth: \"fit-content\",\r\n                }}\r\n              >\r\n                {t(\"unlock\")}\r\n              </Button>\r\n              <Typography\r\n                color={palette.secondary.dark}\r\n                fontFamily={fontFamily}\r\n              >\r\n                {t(\"contentLocked\")}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Fab\r\n        disableRipple\r\n        color=\"primary\"\r\n        onClick={handleDialogOpen}\r\n        sx={{\r\n          visibility: isDecrypted ? \"hidden\" : \"visible\",\r\n          position: \"fixed\",\r\n          bottom: 32,\r\n          left: 32,\r\n        }}\r\n      >\r\n        <Tooltip\r\n          placement=\"left\"\r\n          title={\r\n            <Typography fontFamily={fontFamily}>\r\n              {t(\"unscramble\")}\r\n            </Typography>\r\n          }\r\n        >\r\n          <KeyRounded />\r\n        </Tooltip>\r\n      </Fab>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Stack, Typography } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const LanguageSwitcher: FC = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  return (\r\n    <Stack\r\n      spacing={1}\r\n      useFlexGap\r\n      direction=\"row\"\r\n      flexWrap=\"wrap\"\r\n      divider={<Typography>/</Typography>}\r\n    >\r\n      <Typography\r\n        variant=\"caption\"\r\n        sx={{\r\n          cursor: \"pointer\",\r\n          textDecorationLine: \"underline\",\r\n        }}\r\n        onClick={() => i18n.changeLanguage(\"en\")}\r\n      >\r\n        EN\r\n      </Typography>\r\n      <Typography\r\n        variant=\"caption\"\r\n        sx={{\r\n          cursor: \"pointer\",\r\n          textDecorationLine: \"underline\",\r\n        }}\r\n        onClick={() => i18n.changeLanguage(\"th\")}\r\n      >\r\n        TH\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n};\r\n","import {\r\n  alpha,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  amber,\r\n  orange,\r\n  pink,\r\n  yellow,\r\n} from \"@mui/material/colors\";\r\nimport { FC, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form } from \"react-router\";\r\nimport { LanguageSwitcher } from \"../components/LanguageSwitcher\";\r\n\r\nexport const HomeView: FC = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const { shape, palette } = useTheme();\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const disabled = id.normalize().trim().length === 0;\r\n  const handleSubmit = () => {\r\n    console.log(id);\r\n    setBusy(true);\r\n    setTimeout(() => {\r\n      setBusy(false);\r\n    }, 10000);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        color: palette.secondary.main,\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: `linear-gradient(to bottom right, ${yellow[\"50\"]}, ${amber[\"50\"]}, ${orange[\"100\"]}, ${pink[\"100\"]})`,\r\n      }}\r\n    >\r\n      <Form\r\n        action=\"/card\"\r\n        method=\"get\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Stack\r\n          useFlexGap\r\n          padding={8}\r\n          spacing={2}\r\n          sx={{\r\n            margin: \"auto\",\r\n            maxWidth: \"md\",\r\n            height: \"100%\",\r\n            padding: 8,\r\n            borderRadius: shape.borderRadius,\r\n            backgroundColor: alpha(\r\n              palette.secondary.light,\r\n              0.5\r\n            ),\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            fontFamily={\r\n              i18n.language === \"en\"\r\n                ? \"ibm plex serif\"\r\n                : \"noto serif thai\"\r\n            }\r\n          >\r\n            {t(\"newYearCard\")}\r\n          </Typography>\r\n          <TextField\r\n            placeholder={t(\"cardId\")}\r\n            name=\"id\"\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n            fullWidth\r\n            slotProps={{\r\n              input: {\r\n                sx: {\r\n                  backgroundColor: \"white\",\r\n                  color: palette.secondary.dark,\r\n                },\r\n              },\r\n              htmlInput: {\r\n                autoCapitalize: \"off\",\r\n                autoComplete: \"off\",\r\n                autoSave: \"off\",\r\n                sx: {\r\n                  fontFamily: \"Ubuntu Mono\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <Stack\r\n            useFlexGap\r\n            width=\"100%\"\r\n            spacing={2}\r\n            direction=\"row\"\r\n            flexWrap=\"wrap\"\r\n            alignItems=\"flex-end\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Button\r\n              disableRipple\r\n              disableElevation\r\n              disabled={disabled || busy}\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              {busy ? (\r\n                <CircularProgress variant=\"indeterminate\" />\r\n              ) : (\r\n                t(\"open\")\r\n              )}\r\n            </Button>\r\n            <LanguageSwitcher />\r\n          </Stack>\r\n        </Stack>\r\n      </Form>\r\n    </Box>\r\n  );\r\n};\r\n","import { createTheme } from \"@mui/material\";\r\nimport { brown, yellow } from \"@mui/material/colors\";\r\n\r\nconst _theme = createTheme({\r\n  typography: { fontSize: 16 },\r\n  palette: {\r\n    primary: {\r\n      dark: \"#3f2f9d\",\r\n      main: \"#6a5acd\",\r\n      light: \"#9c92dd\",\r\n    },\r\n    secondary: {\r\n      dark: brown[700],\r\n      main: brown[400],\r\n      light: yellow[50],\r\n    },\r\n  },\r\n});\r\n\r\nexport const theme = _theme;\r\n","import { CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  createBrowserRouter,\r\n  redirect,\r\n  RouterProvider,\r\n} from \"react-router\";\r\nimport { LoaderData } from \"../types/loader\";\r\nimport { ContentView } from \"../views/ContentView\";\r\nimport { HomeView } from \"../views/HomeView\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst router = createBrowserRouter(\r\n  [\r\n    {\r\n      path: \"/\",\r\n      element: <HomeView />,\r\n    },\r\n    {\r\n      path: \"/card\",\r\n      loader: ({ request }) => {\r\n        const url = new URL(request.url);\r\n        const queryParam = url.searchParams;\r\n        if (!queryParam.has(\"id\")) {\r\n          return redirect(\"/\");\r\n        }\r\n        return redirect(`/card/${queryParam.get(\"id\")!}`);\r\n      },\r\n    },\r\n    {\r\n      path: \"/card/:id\",\r\n      element: <ContentView />,\r\n      loader: async ({ params }) => {\r\n        const { id } = params;\r\n        if (id === undefined) {\r\n          return redirect(\"/\");\r\n        }\r\n        const response = await fetch(\r\n          `${\r\n            import.meta.env.BASE_URL\r\n          }assets/content/${id}.enc`\r\n        );\r\n        if (!response.ok) {\r\n          return redirect(\"/\");\r\n        }\r\n        const contentType =\r\n          response.headers.get(\"content-type\");\r\n        if (\r\n          contentType !== \"application/octet-stream\" &&\r\n          contentType !== \"\"\r\n        ) {\r\n          return redirect(\"/\");\r\n        }\r\n        const content = await response.text();\r\n        const loaderData: LoaderData = {\r\n          id,\r\n          content,\r\n        };\r\n        return loaderData;\r\n      },\r\n    },\r\n    {\r\n      path: \"*\",\r\n      loader: () => {\r\n        return redirect(\"/\");\r\n      },\r\n    },\r\n  ],\r\n  {\r\n    basename: \"/project-new-year-card-2025/\",\r\n  }\r\n);\r\n\r\nexport const App: FC = () => {\r\n  // const [content, setContent] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const c = await fetch(qq);\r\n  //     const t = await c.text();\r\n  //     setContent(t);\r\n\r\n  //     const { encryptedDocument, iv } =\r\n  //       await encryptDocument(t, \"to-my-favourite-co-lead\");\r\n  //     console.log(JSON.stringify(iv));\r\n  //     console.log(JSON.stringify(encryptedDocument));\r\n  //   })();\r\n  // }, []);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {/* <Container maxWidth=\"md\">\r\n        <StyledMarkdown>{content}</StyledMarkdown>\r\n      </Container> */}\r\n      <RouterProvider router={router} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","export default {\r\n  translation: {\r\n    cardId: \"Card ID\",\r\n    open: \"Open\",\r\n    passcode: \"Pass code\",\r\n    newYearCard: \"New Year Greetings 2025\",\r\n    unlock: \"Unlock\",\r\n    unscramble: \"Unscramble\",\r\n    unknownCardIdGiven: \"Cannot find card with given ID\",\r\n    contentLocked: \"Locked until January 1st, 2025\",\r\n  },\r\n};\r\n","export default {\r\n  translation: {\r\n    cardId: \"หมายเลขส.ค.ส.\",\r\n    open: \"เปิด\",\r\n    newYearCard: \"ส่งความสุข พุทธศักราช ๒๕๖๘\",\r\n    passcode: \"รหัสปลดล็อค\",\r\n    unlock: \"ถอดรหัส\",\r\n    unscramble: \"ถอดรหัส\",\r\n    contentLocked:\r\n      \"เนื้อหาถูกล็อคจนถึงวันที่ 1 มกราคม 2568\",\r\n  },\r\n};\r\n","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend from \"i18next-http-backend\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./translations/en\";\r\nimport th from \"./translations/th\";\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    detection: {\r\n      lookupLocalStorage: \"language\",\r\n    },\r\n    // debug: true,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    resources: {\r\n      en,\r\n      th,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { App } from \"./App/App\";\nimport \"./i18n/config\";\nimport \"./main.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\n"],"names":["StyledP","styled","COMPONENT_OVERRIDE","node","children","rest","jsx","StyledMarkdown","props","i18n","useTranslation","fontFamily","Box","Markdown","hexToUint8Array","hexIv","length","uint8Array","i","decryptDocument","encryptedDocument","iv","passphrase","keyMaterial","key","encryptedBytes","c","ivBytes","decryptedData","hero","UNLOCKED_DATE","ContentView","encrypted","id","useLoaderData","palette","useTheme","isDecrypted","setIsDecrypted","useState","dialogOpen","setDialogOpen","content","setContent","setPassphrase","handleDialogOpen","handleDecrypt","ok","now","delta","Fragment","jsxs","alpha","yellow","brown","Divider","LocalFloristRounded","Dialog","DialogContent","Stack","TextField","e","Button","Typography","Fab","Tooltip","KeyRounded","LanguageSwitcher","HomeView","t","shape","busy","setBusy","setId","disabled","handleSubmit","amber","orange","pink","Form","CircularProgress","_theme","createTheme","theme","router","createBrowserRouter","request","queryParam","redirect","params","response","contentType","App","ThemeProvider","CssBaseline","RouterProvider","en","th","Backend","LanguageDetector","initReactI18next","createRoot","StrictMode"],"mappings":"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"}